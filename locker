#!/bin/bash
# VERSION: v0.1.0

IMAGE_RESCALE=${IMAGE_RESCALE:-10}
IMAGE_BRIGHTNESS=${IMAGE_BRIGHTNESS:-100}
IMAGE_SATURATION=${IMAGE_SATURATION:-25}
IMAGE_HUE=${IMAGE_HUE:-100}
HOOKS_DIRECTORY="${HOME}/.config/locker.d"
EXAMPLE_HOOK_FILE="${HOOKS_DIRECTORY}/example-hook.sh"

log() {
    echo "$(date)" "$*" | tee -a /tmp/locker.log
}

run() {
    FEH_BG="$(grep -Eo "'.*'" ~/.fehbg | sed "s/'//g")"
    LOCKER_IMAGE=~/.cache/lock.png
    CACHE_SHA_FILE="$LOCKER_IMAGE.sha256"
    CACHED_BG_PATH="$(cat $CACHE_SHA_FILE | awk '{print $2}')"

    [[ ! -f $LOCKER_IMAGE ]] && rm -f "$CACHE_SHA_FILE"

    if [ "$CACHED_BG_PATH" != "$FEH_BG" ] || ! cat ${CACHE_SHA_FILE} | sha256sum --check > /dev/null; then
        log "[!] Updating lock image"
        RESOLUTION="$(xrandr | grep ' connected primary' | grep -Eo '[0-9]+x[0-9]+')"
        convert \
            -quality 0% \
            -resize "${RESOLUTION}^" \
            -extent "${RESOLUTION}" \
            -gravity center \
            -scale $(( 100 / ${IMAGE_RESCALE} ))% \
            -modulate ${IMAGE_BRIGHTNESS},${IMAGE_SATURATION},${IMAGE_HUE} \
            -scale $(( 100 * ${IMAGE_RESCALE} ))% \
            "${FEH_BG}" \
            "${LOCKER_IMAGE}"
        sha256sum ${FEH_BG} > ${CACHE_SHA_FILE}
        log "[+] Updated lock image"
    fi

    log "[!] Locking"
    i3lock \
        --tiling \
        --show-failed-attempts \
        --image="${LOCKER_IMAGE}"

    log "[!] Waiting for i3lock to start";
    while [[ ! $(pgrep -x i3lock) ]]; do sleep 0.25; done; sleep 0.25
    log "[+] Locked"

    mkdir -p "${HOOKS_DIRECTORY}"

    if [[ ! -f "${EXAMPLE_HOOK_FILE}" ]]; then
        log "[!] Created Example Hook at: ${EXAMPLE_HOOK_FILE}"
        cat <<-EOF > "${EXAMPLE_HOOK_FILE}"
			#!/bin/bash

			on_lock() {
			    # Commands to run when locking
			}

			on_unlock() {
			    # Commands to run when unlocking
			}

			[[ "\${BASH_SOURCE[0]}" == "\${0}" ]] && on_\$1
		EOF
        chmod +x "${EXAMPLE_HOOK_FILE}"
    fi

    # 2. Run lock hooks
    log "[!] Running post-lock hooks:"
    for hook in "${HOOKS_DIRECTORY}"/*.sh; do
        hook_name=$(basename "$hook")
        [[ $hook_name == "example-hook.sh" ]] && continue

        log "  $hook"
        $hook lock | tee "/tmp/locker.$hook_name.log"
    done
    log "[+] Done"

    # 3. Wait till unlocked
    log "[!] Waiting for i3lock to be unlocked";
    while [[ $(pgrep -x i3lock) ]]; do sleep 0.25; done; sleep 0.25
    log "[+] Unlocked"

    # 4. Run post-unlock hooks
    log "[!] Running post-unlock hooks:"
    for hook in "${HOOKS_DIRECTORY}"/*.sh; do
        hook_name=$(basename "$hook")
        [[ $hook_name == "example-hook.sh" ]] && continue

        log "  $hook"
        $hook unlock | tee "/tmp/locker.$hook_name.log"
    done
    log "[+] Done"
}

if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    pgrep i3lock > /dev/null && exit 0

    set +x

    cd "$(dirname "$(realpath "$0")")" || exit 1

    run | tee /dev/null
fi
